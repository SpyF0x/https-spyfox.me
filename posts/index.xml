<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - ~# SpyF0x_</title><link>https://spyfox.me/posts/</link><description>All Posts | ~# SpyF0x_</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 16 Apr 2022 12:00:00 +0000</lastBuildDate><atom:link href="https://spyfox.me/posts/" rel="self" type="application/rss+xml"/><item><title>GNU/Linux Homemade Keylogger</title><link>https://spyfox.me/posts/cybersecurity/offensive/system/gnu-linux-homemade-keylogger/</link><pubDate>Sat, 16 Apr 2022 12:00:00 +0000</pubDate><author>Author</author><guid>https://spyfox.me/posts/cybersecurity/offensive/system/gnu-linux-homemade-keylogger/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/security/linux-keylogger/linux-keylogger.webp" referrerpolicy="no-referrer">
            </div>A bit of context  GNU/Linux is one of those operating systems where, once you get the hang of it, you can&rsquo;t stop wanting to learn more about how it works.
In this article, we will explore how the /dev/input directory works and what can be done with it.
What&rsquo;s inside ?  Let&rsquo;s simply begin with a simple ls on it :
1 2 3 4  $ ls /dev/input/ by-id event1 event12 event15 event18 event20 event23 event3 event6 event9 mouse1 by-path event10 event13 event16 event19 event21 event24 event4 event7 mice mouse2 event0 event11 event14 event17 event2 event22 event25 event5 event8 mouse0   You&rsquo;ll notice that the output can be broken down into :]]></description></item><item><title>OSINT : Hide your email address on GitHub</title><link>https://spyfox.me/posts/cybersecurity/offensive/red-team/osint/hide-your-email-address-on-github/</link><pubDate>Sun, 20 Mar 2022 17:00:00 +0000</pubDate><author>Author</author><guid>https://spyfox.me/posts/cybersecurity/offensive/red-team/osint/hide-your-email-address-on-github/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/osint/github-mail-protect/github-banner.webp" referrerpolicy="no-referrer">
            </div>A bit of context  As a follow-up to this post (here), where I show three techniques to extract the email address of a user on GitHub, I&rsquo;m posting here an antidote to such techniques. In a nutshell : How to protect your email address on GitHub.
Why ?  Your email is the preferred way for hackers to communicate with you. The days of pixelated logos and bad spelling are long gone.]]></description></item><item><title>OSINT : 3 methods to find GitHub user email address</title><link>https://spyfox.me/posts/cybersecurity/offensive/red-team/osint/3-methods-to-find-github-user-email-address/</link><pubDate>Thu, 17 Mar 2022 17:00:00 +0000</pubDate><author>Author</author><guid>https://spyfox.me/posts/cybersecurity/offensive/red-team/osint/3-methods-to-find-github-user-email-address/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/osint/github-mail/github-find-an-email.webp" referrerpolicy="no-referrer">
            </div>A bit of context  I&rsquo;m going to list three methods, from the most stealthy and less effective to the less stealthy and most effective to gather an email address using GitHub.
There is no particular attack conducted against GitHub users. It is only a matter of iteratively browsing all the information that is publicly available.
First method : Profile README !  Since 2016, GitHub allows users to use a Markdown file named &ldquo;README.]]></description></item><item><title>FLoC : Google's new weapon to bypass cookies</title><link>https://spyfox.me/posts/system/browser/floc-googles-new-weapon-to-bypass-cookies/</link><pubDate>Tue, 08 Mar 2022 17:00:00 +0000</pubDate><author>Author</author><guid>https://spyfox.me/posts/system/browser/floc-googles-new-weapon-to-bypass-cookies/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/privacy/floc/eff-floc-google.png" referrerpolicy="no-referrer">
            </div>I&rsquo;m pleased to introduce you, FLoC ! An outstanding innovation brought you by Google LLC to make you meet a plethora of people exactly like you !
What&rsquo;s a cookie ?  It is a small piece of text that a website gives to your browser to store. This piece of text allows the website to recognize your browser the next time you visit the website.
For example, when you set a website on &ldquo;dark theme&rdquo;, it gives your browser the cookie &ldquo;dark-theme: enabled&rdquo;.]]></description></item><item><title>DMZ : One click to get hacked</title><link>https://spyfox.me/posts/cybersecurity/protection/network/dmz-one-click-to-get-hacked/</link><pubDate>Wed, 16 Feb 2022 18:00:00 +0000</pubDate><author>Author</author><guid>https://spyfox.me/posts/cybersecurity/protection/network/dmz-one-click-to-get-hacked/</guid><description>&lt;div class="featured-image">
&lt;img src="/images/security/dmz/dmz-background.png" referrerpolicy="no-referrer">
&lt;/div>By design, your gateway has a set of firewall rules to prevent anyone from reaching directly your devices from the Internet
But this same gateway, has also an option called DMZ to cancel this protection.
First things first Originally, it is a set of rules to ensure that a server will be connected to the Internet, but will not be able to access the local network :
Your server becomes the front door of your network.</description></item><item><title>Endlessh : Troll any hacker with this cool SSH blackhole !</title><link>https://spyfox.me/posts/cybersecurity/protection/network/endlessh-troll-any-hacker-with-this-cool-ssh-blackhole-/</link><pubDate>Thu, 27 Jan 2022 18:00:00 +0000</pubDate><author>Author</author><guid>https://spyfox.me/posts/cybersecurity/protection/network/endlessh-troll-any-hacker-with-this-cool-ssh-blackhole-/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/security/spyfox-endlessh.webp" referrerpolicy="no-referrer">
            </div>Firewalls, brute force detection, SSH on random port, geoip filtering, honeypots&hellip;
There are LOTS of ideas to make life hard for the bot army that constantly probes the internet.
Well, thanks to &ldquo;skeeto&rdquo; you can add &ldquo;Endlessh&rdquo; to this list !
How does it work ?  According to the official Github repository, Endlessh is an SSH tarpit that very slowly sends an endless, random SSH banner.
It keeps SSH clients locked up for hours or even days at a time.]]></description></item><item><title>Secure your GNU/Linux server with these few iptables rules</title><link>https://spyfox.me/posts/cybersecurity/protection/system/secure-your-gnu-linux-server-with-these-few-iptables-rules/</link><pubDate>Sun, 23 Jan 2022 12:00:00 +0000</pubDate><author>Author</author><guid>https://spyfox.me/posts/cybersecurity/protection/system/secure-your-gnu-linux-server-with-these-few-iptables-rules/</guid><description>&lt;div class="featured-image">
&lt;img src="/images/tutorials/iptables-secure-your-linux-server0.png" referrerpolicy="no-referrer">
&lt;/div>The simple fact that your server is accessible on the Internet means that it is being attacked every 39 seconds on average.
That is more than 2,215 times in a day !
Should we simply stop having servers ? Of course not !
Why such attacks ? When I say this kind of things (which are actually true) many people take it as a joke or worse, are skeptical :</description></item><item><title>Void Linux w/ encrypted boot, rootfs and swap on BIOS</title><link>https://spyfox.me/posts/system/linux/tutorials/void-linux-with-encrypted-boot-rootfs-and-swap-on-bios-/</link><pubDate>Sat, 01 Jan 2022 12:00:00 +0000</pubDate><author>Author</author><guid>https://spyfox.me/posts/system/linux/tutorials/void-linux-with-encrypted-boot-rootfs-and-swap-on-bios-/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/tutorials/void/encrypted-void0.webp" referrerpolicy="no-referrer">
            </div>So today, we will see how to properly set up an uncomplicated Void Linux full disk encryption installation on legacy BIOS.
First things first  In case you&rsquo;re wondering :
 1. Why Void Linux ?
 I&rsquo;ve recently acquired an old laptop, so what&rsquo;s better for this old boi than an ultra lightweight systemd free GNU/Linux distribution ?
 2. Why encrypted ?
 It&rsquo;s a (bad ?) habit I got from work.]]></description></item><item><title>How to block Log4j with fail2ban</title><link>https://spyfox.me/posts/cybersecurity/protection/system/how-to-block-log4j-with-fail2ban/</link><pubDate>Sun, 19 Dec 2021 12:00:00 +0000</pubDate><author>Author</author><guid>https://spyfox.me/posts/cybersecurity/protection/system/how-to-block-log4j-with-fail2ban/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/security/log4j-fail2ban.webp" referrerpolicy="no-referrer">
            </div>So today, we will see how to detect and immediately ban using fail2ban, all the creeps that try to exploit your servers with log4j.
First things first  If you haven&rsquo;t done so yet, check out here the official CISA log4j vulnerability guidance, which includes all the responses from a bunch of software vendors.
The problem The problem with the internet is that too many computers, in my opinion, have for the sole purpose to scan and detect all accessible and vulnerable servers.]]></description></item><item><title>How to reset a forgotten password (Raspberry Pi edition)</title><link>https://spyfox.me/posts/cybersecurity/offensive/system/how-to-reset-a-forgotten-password-raspberry-pi-edition/</link><pubDate>Sun, 05 Dec 2021 10:00:00 +0000</pubDate><author>Author</author><guid>https://spyfox.me/posts/cybersecurity/offensive/system/how-to-reset-a-forgotten-password-raspberry-pi-edition/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/security/raspberry-passw/raspberry-passw0.webp" referrerpolicy="no-referrer">
            </div>So today, we&rsquo;re going to look at how to hack your own Raspberry Pi in order to break any system authentication.
A bit of background  Last week, I wanted to make sure that my favorite device, a proud Raspberry Pi, was secure because there was an important vulnerability on a software I knew was installed on it.
Happy to open a terminal in order to connect via SSH to this little wonder, my pleasure was interrupted when I saw this :]]></description></item></channel></rss>